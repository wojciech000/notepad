plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
}

group 'edu.application'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'

}

application {
    mainModule = 'edu.application.notepad'
    mainClass = 'edu.application.notepad.Main'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation group: 'org.openjfx', name: 'javafx-base', version: '17.0.2', classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-base', version: '17.0.2', classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-base', version: '17.0.2', classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: '17.0.2', classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: '17.0.2', classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-controls', version: '17.0.2', classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: '17.0.2', classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: '17.0.2', classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-fxml', version: '17.0.2', classifier: 'linux'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: '17.0.2', classifier: 'win'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: '17.0.2', classifier: 'mac'
    implementation group: 'org.openjfx', name: 'javafx-graphics', version: '17.0.2', classifier: 'linux'

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': "edu.application.notepad.Main"
    }
    archiveBaseName = "${rootProject.name}"
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}